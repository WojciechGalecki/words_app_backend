---
org: wojciechgalecki
app: words-app
service: words-app-api

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: python3.7
  profile: wojtek
  region: eu-west-1
  timeout: 3
  memory: 128
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.dynamodb_table}"
  environment:
    DYNAMODB_TABLE: ${self:custom.dynamodb_table}

custom:
  dynamodb_table: ${cf:words-app-db-${self:provider.stage}.databaseName}
  pythonRequirements:
    dockerizePip: true

functions:
  createOrUpdateWord:
    handler: createOrUpdateWord.lambda_handler
    events:
      - http:
          path: words
          method: post
          request:
            schema:
              application/json: ${file(validation/createOrUpdateWordPayloadSchema.json)}

  deleteWord:
    handler: deleteWord.lambda_handler
    events:
      - http:
          path: words
          method: delete
          request:
            parameters:
              querystrings:
                userId: true
                word: true

  getAllWords:
    handler: getAllWords.lambda_handler
    events:
      - http:
          path: words
          method: get
          request:
            parameters:
              querystrings:
                userId: true

plugins:
  - serverless-python-requirements

package:
  exclude:
    - node_modules/**
    - .idea/**
    - .pytest_cache/**
    - venv/**
    - package.json
    - package-lock.json
    - requirements.txt
    - test/**
